div(ng-include='"components/navbar/navbar.html"')
.container
  .row
    .col-sm-12
      h1 Create Product

      form.form(name='form', ng-submit='createProduct(form)', novalidate='')

        .form-group(ng-class='{ "has-success": form.name.$valid && submitted,\
        "has-error": form.name.$invalid && submitted }')
          label Name
          input.form-control(type='text', name='name', ng-model='product.name', required='')
          p.help-block(ng-show='form.name.$error.required && submitted')
            | A name is required

        // TODO: validate that images exist here
        .form-group(ng-class='{ "has-success": form.productimage.$valid && submitted,\
        "has-error": form.productimage.$invalid && submitted }')
          label Product Image
          div.productimgdiv
            img.productimg(src='{{product.localimgpath}}')
          hr
          input(type='file', name='productimage', file-model='product.productimage', required='')
          p.help-block(ng-show='form.productimage.$error.required && submitted')
            | A product image is required

        // Validate that description exists here
        .form-group(ng-class='{ "has-success": form.description.$valid && submitted,\
        "has-error": form.description.$invalid && submitted }')
          label Description
          textarea.form-control(rows=5, name='name', ng-model='product.description', required='')
          p.help-block(ng-show='form.description.$error.required && submitted')
            | A description is required
        
        // TODO: validate the price format
        .form-group(ng-class='{ "has-success": form.price.$valid && submitted,\
        "has-error": form.price.$invalid && submitted }')
          label Price
          input.form-control(type='number', name='price', ng-model='product.price', required='')
          p.help-block(ng-show='form.price.$error.required && submitted')
            | A price is required

        .form-group(ng-class='{ "has-success": form.unit.$valid && submitted,\
        "has-error": form.name.$invalid && submitted }')
          label Unit
          input.form-control(type='text', name='unit', ng-model='product.unit', required='')
          p.help-block(ng-show='form.unit.$error.required && submitted')
            | A unit is required

        .form-group(ng-class='{ "has-success": form.quantity.$valid && submitted,\
        "has-error": form.quantity.$invalid && submitted }')
          label Quantity
          input.form-control(type='number', name='quantity', ng-model='product.quantity', required='')
          p.help-block(ng-show='form.quantity.$error.required && submitted')
            | A quantity is required

        div
          button.btn.btn-inverse.btn-lg.btn-login(type='submit')
            | Create

      div(ng-show='imageUpload')
        {{product.imgurl}}